apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: elasticsearch
  labels:
    component: elasticsearch
    role: master
spec:
  serviceName: elasticsearch-data
  replicas: {{ .Values.elasticsearch.replicas }}
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: {{ .Values.elasticsearch.storage.size }}
      storageClassName: {{ .Values.elasticsearch.storage.class }}
  template:
    metadata:
      labels:
        component: elasticsearch
        role: master
        annotations:
        # Elasticsearch uses a hybrid mmapfs / niofs directory by default to
        # store its indices. The default operating system limits on mmap counts
        # is likely to be too low, which may result in out of memory exceptions,
        # so we use vm.max_map_count=262144 to increase that value.
        pod.beta.kubernetes.io/init-containers: '[
          {
          "name": "sysctl",
            "image": "{{ .Values.sysctl.image.repository }}:{{ .Values.sysctl.image.tag }}",
            "imagePullPolicy": "{{ .Values.sysctl.image.pullPolicy }}",
            "command": ["sysctl", "-w", "vm.max_map_count=262144"],
            "securityContext": {
              "privileged": true
            }
          }
        ]'
    spec:
      imagePullSecrets:
      - name: {{ .Values.common.image.pullSecret }}
      containers:
      - name: elasticsearch
        image: "{{ .Values.common.image.repository }}:{{ .Values.common.image.tag }}"
        imagePullPolicy: {{ .Values.common.image.pullPolicy }}
        resources:
          limits:
            memory: "{{ .Values.resource.limits.memory }}"
            cpu: "{{ .Values.resource.limits.cpu }}"
          requests:
            memory: "{{ .Values.resource.requests.memory }}"
            cpu: "{{ .Values.resource.requests.cpu }}"
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "elasticsearch"
        - name: "DISCOVERY_SERVICE"
          value: "elasticsearch-discovery"
        - name: "NETWORK_HOST"
          value: "_site_"
        - name: "NUMBER_OF_REPLICAS"
          value: "{{ .Values.elasticsearch.replicas }}"
        {{- range $key, $value :=  .Values.elasticsearch.env }}
        - name: {{ $key | upper | replace "-" "_" }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: storage
          mountPath: /usr/share/elasticsearch/data

